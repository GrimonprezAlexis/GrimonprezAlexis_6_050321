[{"C:\\openclassroom\\heroku\\react-starter\\client\\src\\registerServiceWorker.js":"1","C:\\openclassroom\\heroku\\react-starter\\client\\src\\components\\home\\photographerList.js":"2","C:\\openclassroom\\heroku\\react-starter\\client\\src\\index.js":"3","C:\\openclassroom\\heroku\\react-starter\\client\\src\\App.js":"4","C:\\openclassroom\\heroku\\react-starter\\client\\src\\components\\home\\home.js":"5","C:\\openclassroom\\heroku\\react-starter\\client\\src\\components\\home\\tagsNavigation.js":"6","C:\\openclassroom\\heroku\\react-starter\\client\\src\\components\\photographer\\photographerDetail.js":"7","C:\\openclassroom\\heroku\\react-starter\\client\\src\\components\\photographer\\galerie.js":"8"},{"size":4554,"mtime":1614901590992,"results":"9","hashOfConfig":"10"},{"size":1559,"mtime":1616016585427,"results":"11","hashOfConfig":"10"},{"size":363,"mtime":1616008637422,"results":"12","hashOfConfig":"13"},{"size":596,"mtime":1616018701121,"results":"14","hashOfConfig":"10"},{"size":2574,"mtime":1616012294083,"results":"15","hashOfConfig":"10"},{"size":921,"mtime":1616012304631,"results":"16","hashOfConfig":"13"},{"size":4682,"mtime":1616019450010,"results":"17","hashOfConfig":"10"},{"size":5601,"mtime":1616019503847,"results":"18","hashOfConfig":"13"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"oxanlk",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"qwedms",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},"C:\\openclassroom\\heroku\\react-starter\\client\\src\\registerServiceWorker.js",[],["39","40"],"C:\\openclassroom\\heroku\\react-starter\\client\\src\\components\\home\\photographerList.js",["41"],"import React from 'react'\r\n\r\nimport { Route, Link } from 'react-router-dom';\r\n\r\n\r\n//Return photographer list\r\n//The list can be render filtered by tag\r\nconst PhotographerList = ({ photographer}) => {\r\n    return (\r\n        <>\r\n        <div className=\"photographer\" id={`photographer-${photographer.id}`}>\r\n                <div className=\"photographer__img\">\r\n                    <Link to={`/${photographer.id}`} className=\"photographer__img__link\">\r\n                        <img src={`${window.location.origin}/img/Photographers_ID_Photos/${photographer.portrait}`} alt={photographer.nom} />\r\n                        <h2>{photographer.nom}</h2>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"photographer__text\">\r\n                    <p className=\"photographer__text__localisation\">{photographer.ville}, {photographer.country || photographer.pays}</p>\r\n                    <p className=\"photographer__text__desc\">{photographer.tagline}</p>\r\n                    <p className=\"photographer__text__price\">{`${photographer.prix}€ /jour`}</p>\r\n                </div>\r\n                <ul className=\"photographer__tag\">\r\n                    {photographer.tags.map((tag,index) => {\r\n                        return (\r\n                            <li key={index}>\r\n                                <span aria-hidden=\"false\">{`#${tag}`}</span>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PhotographerList;","C:\\openclassroom\\heroku\\react-starter\\client\\src\\index.js",[],["42","43"],"C:\\openclassroom\\heroku\\react-starter\\client\\src\\App.js",[],"C:\\openclassroom\\heroku\\react-starter\\client\\src\\components\\home\\home.js",[],"C:\\openclassroom\\heroku\\react-starter\\client\\src\\components\\home\\tagsNavigation.js",["44"],"C:\\openclassroom\\heroku\\react-starter\\client\\src\\components\\photographer\\photographerDetail.js",["45"],"C:\\openclassroom\\heroku\\react-starter\\client\\src\\components\\photographer\\galerie.js",["46"],"import React, { useState, useEffect } from \"react\";\r\nimport _ from 'lodash';\r\n\r\n//https://www.npmjs.com/package/simple-react-lightbox#options\r\nimport { SRLWrapper } from \"simple-react-lightbox\";\r\n\r\nimport './galerie.scss';\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nlibrary.add(faHeart);\r\n\r\nconst Galerie = ({ photographerId, photographerPrice }) => {    \r\n    const [medias, setMedias] = useState([]);\r\n    \r\n    const options = {\r\n    settings: {\r\n        autoplaySpeed: 3000,\r\n        boxShadow: 'none',\r\n        disableKeyboardControls: false,\r\n        disablePanzoom: false,\r\n        disableWheelControls: false,\r\n        hideControlsAfter: 3000,\r\n        lightboxTransitionSpeed: 0.3,\r\n        lightboxTransitionTimingFunction: 'linear',\r\n        overlayColor: 'rgba(30, 30, 30, 0.9)',\r\n        slideAnimationType: 'fade',\r\n        slideSpringValues: [300, 50],\r\n        slideTransitionSpeed: 0.6,\r\n        slideTransitionTimingFunction: 'linear',\r\n        usingPreact: false\r\n    }\r\n    };\r\n\r\n    //replace componentDidMonth\r\n    useEffect(() => {\r\n        fetchMediaByPhotographerId();\r\n    }, []);\r\n    \r\n    //Get the medias by ID from API\r\n    const fetchMediaByPhotographerId = async () => {\r\n        const response = await fetch(`api/photographers/${photographerId}/medias`);\r\n        const data = await response.json();\r\n        setMedias(_.orderBy(data, 'date'));\r\n    };\r\n    \r\n    //Add likes onclick\r\n    const handleLike = (id) => {\r\n        const newMedias = [...medias];\r\n        const mediasUntouched = newMedias.filter(m => m.id !== id);\r\n        const mediaToUpdate = _.find(newMedias, {id});\r\n        mediaToUpdate.like++;\r\n        mediasUntouched.push(mediaToUpdate);\r\n        const sortedMedia = _.orderBy(mediasUntouched, 'date');\r\n        setMedias(sortedMedia);\r\n    };\r\n\r\n\r\n    const handleSort = (e) => {\r\n        let wantedMedias = _.orderBy(medias, e.target.value);\r\n\r\n        //date, popularity == like, title\r\n        if(e.target.value === 'like') wantedMedias.reverse() //Les plus populaires selon nombre de likes\r\n        setMedias(wantedMedias);\r\n    }\r\n\r\n    let totalLikes = _.sumBy(medias, 'like');\r\n\r\n    return (\r\n        <>\r\n        <div className=\"listbox__container\">\r\n            <label htmlFor=\"order\" className=\"listbox__label\">Trier par</label>\r\n            <select name=\"order\" id=\"order\" className=\"listbox__select\"\r\n                tabIndex=\"0\"  aria-activedescendant=\"order\"\r\n                aria-labelledby=\"Order by\" aria-label=\"Order by\" onChange={handleSort}>\r\n                <option value=\"\" disabled=\"disabled\"></option>\r\n                <option value=\"date\">Date</option>\r\n                <option value=\"\" disabled=\"disabled\" className=\"white\">─────────</option>\r\n                <option value=\"like\">Popularité</option>\r\n                <option value=\"\" disabled=\"disabled\" className=\"white\">─────────</option>\r\n                <option value=\"titre\">Titre</option>\r\n                <option value=\"\" disabled=\"disabled\"></option>\r\n            </select>\r\n        </div>\r\n        <SRLWrapper options={options}>\r\n        <section className=\"galerie\" aria-label=\"image closeup view\">\r\n            <div className=\"galerie__totalLikes\">\r\n                <div className=\"galerie__totalLikes__number\">\r\n                    <p>{totalLikes}</p>\r\n                    <button className=\"galerie__detail__addLike\"><img src=\"http://localhost:3000/img/like_black.png\" alt=\"like\" /></button>\r\n                </div>\r\n                <div>\r\n                    <p>{photographerPrice} € /jour</p>\r\n                </div>\r\n            </div>\r\n\r\n            {medias.map((media, index) => {\r\n                return (\r\n                    <div className={`galerie__item`} key={index}>\r\n                        <div>\r\n                        {media.image \r\n                            ? \r\n                            <img src={`${window.location.origin}/img/${media.photographerName}/${media.image}`} \r\n                            alt={`${media.titre}`} className=\"galerie__item__image\" />\r\n                            :\r\n                            <video controls className=\"galerie__item__video\">\r\n                                <source src={`${window.location.origin}/img/${media.photographerName}/${media.video}`} type=\"video/mp4\"></source>\r\n                            </video>\r\n                        }\r\n                        </div>\r\n                        <div className=\"galerie__detail\">\r\n                            <div className=\"galerie__detail-text\">\r\n                                <p className=\"galerie__detail__text\">{`${media.titre}`}</p>\r\n                                <div className=\"galerie__detail__price-like\">\r\n                                    <p className=\"galerie__detail__price\">{`${media.prix}`}€</p>\r\n                                    <p className=\"galerie__detail__like\">{`${media.like}`}</p>\r\n                                    <button className=\"galerie__detail__addLike\" onClick={() => handleLike(media.id)} aria-labelledby=\"Likes\">\r\n                                        <FontAwesomeIcon icon={faHeart} />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </section>\r\n        </SRLWrapper>\r\n        </>\r\n    );\r\n}\r\nexport default Galerie;",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":3,"column":10,"nodeType":"53","messageId":"54","endLine":3,"endColumn":15},{"ruleId":"47","replacedBy":"55"},{"ruleId":"49","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":12,"column":30,"nodeType":"59","endLine":12,"endColumn":85},{"ruleId":"60","severity":1,"message":"61","line":22,"column":8,"nodeType":"62","endLine":22,"endColumn":10,"suggestions":"63"},{"ruleId":"60","severity":1,"message":"64","line":40,"column":8,"nodeType":"62","endLine":40,"endColumn":10,"suggestions":"65"},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar",["66"],["67"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchPhotographerById'. Either include it or remove the dependency array.","ArrayExpression",["68"],"React Hook useEffect has a missing dependency: 'fetchMediaByPhotographerId'. Either include it or remove the dependency array.",["69"],"no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},{"desc":"72","fix":"73"},"Update the dependencies array to be: [fetchPhotographerById]",{"range":"74","text":"75"},"Update the dependencies array to be: [fetchMediaByPhotographerId]",{"range":"76","text":"77"},[596,598],"[fetchPhotographerById]",[1255,1257],"[fetchMediaByPhotographerId]"]